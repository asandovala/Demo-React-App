{"version":3,"sources":["res/img/pokeicon.png","api/api.js","actions.js","constants.js","components/CardDetail.js","components/Modal.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","registerServiceWorker.js","reducers.js","index.js"],"names":["module","exports","capitalizeFirstLetter","string","charAt","toUpperCase","slice","requestPokemons","dispatch","link","type","fetch","then","response","json","data","payload","results","catch","error","CardDetail","props","state","this","url","setState","sprites","front_default","name","types","map","t","join","abilities","a","ability","photo_url","className","alt","src","Component","modalRoot","document","getElementById","Modal","el","createElement","appendChild","removeChild","ReactDOM","createPortal","children","Card","showDetail","bind","closeDetail","pokemon_number","modal","show_detail","onClick","id","style","maxWidth","logo","CardList","pokemons","user","i","key","SearchBox","searchfield","searchChange","placeholder","onChange","Scroll","overflow","border","height","ErrorBoundary","hasError","info","App","onRequestPokemons","searchField","onSearchChange","isPending","filteredPokemons","filter","pokemon","toLowerCase","includes","ErrorBoundry","connect","searchPokemons","event","target","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initialStateSearch","initialStatePokemons","rootReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","render","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f9d8da16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeicon.4e2bf2b3.png\";","export const apiCall = (link) =>\n  fetch(link).then(response => response.json())\n\nexport const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }","import { apiCall } from './api/api'\nimport {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED\n } from './constants'\n\n\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\n\nexport const requestPokemons = () => (dispatch) => {\n  dispatch({ type: REQUEST_POKEMONS_PENDING })\n  apiCall('https://pokeapi.co/api/v2/pokemon?limit=150&offset=0')\n    .then(data => dispatch({ type: REQUEST_POKEMONS_SUCCESS, payload: data.results }))\n    .catch(error => dispatch({ type: REQUEST_POKEMONS_FAILED, payload: error }))\n}","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_POKEMONS_PENDING = 'REQUEST_POKEMONS_PENDING';\nexport const REQUEST_POKEMONS_SUCCESS = 'REQUEST_POKEMONS_SUCCESS';\nexport const REQUEST_POKEMONS_FAILED = 'REQUEST_POKEMONS_FAILED';\n","import React, { Component } from 'react';\nimport './Modal.css';\nimport { capitalizeFirstLetter } from '../api/api'\nimport '../res/css/loading.css'\n\n\nclass CardDetail extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      \"photo_url\": \"\",\n      \"name\": \"\",\n      \"types\": \"\",\n      \"abilities\": \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.url)\n    .then(response => response.json())\n    .then(data =>{\n      this.setState({\n        \"photo_url\": data.sprites.front_default,\n        \"name\": data.name,\n        \"types\": data.types.map(\n          t => capitalizeFirstLetter(t.type.name)\n        ).join(', '),\n        \"abilities\": data.abilities.map(\n          a => capitalizeFirstLetter(a.ability.name)\n        ).join(', ')\n      });\n    })\n  }\n\n  render() {\n    const { photo_url, name, types, abilities } = this.state;\n    if (photo_url !== \"\" ) {\n      return (\n        <div className=\"modal\">\n          <div className=\"bg-light-blue dt mw6 center pa3 ma2 br3\">\n            <div className=\"dtc v-mid\">\n              <img alt={ name } src={ photo_url } className=\"db center mw5\"/>\n            </div>\n            <div className=\"dtc v-mid pl3\">\n              <h2 className=\"h1-poketext black\">{capitalizeFirstLetter(name)}</h2>\n              <div className=\"poketext\">\n                <p>\n                  <span className=\"black-70\">Type</span><br/>\n                  <span >{types}</span>\n                </p>\n                <p>\n                  <span className=\"black-70\">Abilities</span><br/>\n                  <span >{abilities}</span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"modal\">\n          <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default CardDetail;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nconst modalRoot = document.getElementById('modal-root');\n\nclass Modal extends Component {\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n    }\n\n    componentDidMount() {\n        // The portal element is inserted in the DOM tree after\n        // the Modal's children are mounted, meaning that children\n        // will be mounted on a detached DOM node. If a child\n        // component requires to be attached to the DOM tree\n        // immediately when mounted, for example to measure a\n        // DOM node, or uses 'autoFocus' in a descendant, add\n        // state to Modal and only render the children when Modal\n        // is inserted in the DOM tree.\n        modalRoot.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        modalRoot.removeChild(this.el);\n    }\n\n    render() {\n        return ReactDOM.createPortal(this.props.children, this.el);\n    }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport CardDetail from './CardDetail';\nimport Modal from './Modal';\nimport logo from '../res/img/pokeicon.png';\nimport { capitalizeFirstLetter } from '../api/api'\n\nclass Card extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      'show_detail': false\n    };\n    this.showDetail = this.showDetail.bind(this);\n    this.closeDetail = this.closeDetail.bind(this);\n  }\n\n  showDetail() {\n    this.setState({\n      'show_detail': true\n    });\n  }\n\n  closeDetail() {\n    this.setState({\n      'show_detail': false\n    });\n  }\n\n  render() {\n    const { pokemon_number, url, name } = this.props;\n    const { show_detail } = this.state;\n\n    const modal = show_detail ? (\n      <Modal>\n        <div onClick={this.closeDetail}>\n          <CardDetail url={url}/>\n        </div>\n      </Modal>\n    ) : null;\n\n    return (\n      <div className='dib'>\n        <div id={pokemon_number} onClick={this.showDetail} className='dib'>\n          <div className='tc grow br3 pa3 ma2 dib bw2' style={{ maxWidth: 200 }}>\n            <img src={logo} alt={pokemon_number + 1} className=\"dib\"/><br/>\n            <div className='bg-light-green br3 pa2 dib poketext'>\n              <span>{capitalizeFirstLetter(name)}</span>\n            </div>\n          </div>\n        </div>\n        {modal}\n      </div>\n    );\n    \n  }\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ pokemons }) => {\n  return (\n    <div>\n      {\n        pokemons.map((user, i) => {\n          return (\n            <Card\n              key={i}\n              pokemon_number={i}\n              url={pokemons[i].url}\n              name={pokemons[i].name}\n              />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue br3'\n        type='search'\n        placeholder='Search Pokémons'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflow: 'scroll', border: '2px solid rgba(9,72,121,86)', height: '800px'}}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch (error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render () {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestPokemons } from '../actions';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport './App.css';\nimport '../res/css/loading.css'\n\n// parameter state comes from index.js provider store state(rootReducers)\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchPokemons.searchField,\n    pokemons: state.requestPokemons.pokemons,\n    isPending: state.requestPokemons.isPending\n  }\n}\n\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\n// the function returns an object then uses connect to change the data from redecers.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestPokemons: () => dispatch(requestPokemons())\n  }\n}\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestPokemons();\n  }\n\n  render() {\n    const { pokemons, searchField, onSearchChange, isPending } = this.props;\n    const filteredPokemons = pokemons.filter(pokemon => {\n      return pokemon.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className='tc'>\n        <div className='appTitle'>PokéApp</div>\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          { isPending ? <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div> :\n            <ErrorBoundry>\n              <CardList pokemons={filteredPokemons} />\n            </ErrorBoundry>\n          }\n        </Scroll>\n      </div>\n    );\n  }\n}\n\n// action done from mapDispatchToProps will channge state from mapStateToProps\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_POKEMONS_PENDING,\n  REQUEST_POKEMONS_SUCCESS,\n  REQUEST_POKEMONS_FAILED\n } from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchPokemons = (state=initialStateSearch, action={}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, {searchField: action.payload})\n    default:\n      return state\n  }\n}\n\nconst initialStatePokemons = {\n  pokemons: [],\n  isPending: true\n}\n\nexport const requestPokemons = (state=initialStatePokemons, action={}) => {\n  switch (action.type) {\n    case REQUEST_POKEMONS_PENDING:\n      return Object.assign({}, state, {isPending: true})\n    case REQUEST_POKEMONS_SUCCESS:\n      return Object.assign({}, state, {pokemons: action.payload, isPending: false})\n    case REQUEST_POKEMONS_FAILED:\n      return Object.assign({}, state, {error: action.payload})\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport 'tachyons';\n\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { requestPokemons, searchPokemons } from './reducers'\n\nimport './index.css';\n\n// const logger = createLogger()\n\nconst rootReducers = combineReducers({requestPokemons, searchPokemons})\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware)) //, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}